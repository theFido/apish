keyword = { "headers" | "params" | "query" }

kwd_delimiter = _{ ":" }

option = { keyword ~ kwd_delimiter }

data_type = { "string" | "number" | "bool" }

space = _{ " " | "\t" }

alpha = _{ 'a'..'z' | 'A'..'Z' }
digit = { '0'..'9' }

valid_special = _{ "_" | "-" }

ident = { (alpha | digit | valid_special )+ }

ident_list = _{ !digit ~ ident ~ (" " ~ ident)+ }

pair_modifiers = { "alias" }

modified_pair = { pair_modifiers ~ space ~ ident }

single_modifiers = { "required" }

default_value = { "(" ~ space* ~ ident ~ space* ~ ")" }

char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

inner = @{ char* }

d_quote = _{ "\"" }

string = @{ d_quote ~ inner ~ d_quote }

options = { space+ ~ (modified_pair | single_modifiers | default_value) }

item = { space+ ~ ident ~ space ~ data_type ~ options* ~ space* ~ kwd_delimiter ~ space* ~ string* ~ NEWLINE }

item_list = { item* }

spec_header_title = { "title" ~ kwd_delimiter ~ space* ~ string* ~ NEWLINE }
spec_header_version = { "version" ~ kwd_delimiter ~ space* ~ string* ~ NEWLINE }
spec_header = { spec_header_title?  ~ spec_header_version? }

spec_item = _{ option ~ NEWLINE }

spec_items = { spec_item ~ item_list }

blank_line = _{ space* ~ NEWLINE }

path_id = { "{" ~ ident ~ "}" }

path_token = { "/" | path_id }

sub_path = { path_token+ ~ ident* }

api_single_keyword = { "headers" | "params" | "query" | "produces" | "consumes" | "example" | "tags" }

http_verb = { "get" | "post" | "put" | "delete" | "patch" }

word_list = { space+ ~ (group_reference | ident ) }

// single use tokens
FINAL_ITEM = { NEWLINE | EOI }
group_reference = { "g(" ~ ident ~ ")" }

api_use_case = { space+ ~ string* ~ FINAL_ITEM }
api_use_cases = { space+ ~ "use_cases:" ~ NEWLINE ~ api_use_case* }
api_single_option = { space+ ~ api_single_keyword ~ kwd_delimiter ~ word_list* ~ FINAL_ITEM }
api_status_codes = { space+ ~ "status_codes" ~ kwd_delimiter ~ word_list+ ~ FINAL_ITEM }
api_operation = { space+ ~ "operation" ~ kwd_delimiter ~ space+ ~ ident ~ FINAL_ITEM }
api_request = { space+ ~ "request" ~ kwd_delimiter ~ space+ ~ ident ~ FINAL_ITEM }
api_response = { space+ ~ "response" ~ kwd_delimiter ~ space+ ~ ident ~ FINAL_ITEM }
api_params = { api_single_option | api_use_cases | api_status_codes | api_request | api_response | api_operation }
api_op = { space+ ~ http_verb ~ kwd_delimiter ~ space+ ~ string* ~ NEWLINE ~ api_params* }
path = { space+ ~ sub_path* ~ kwd_delimiter }
api = { path* ~ NEWLINE ~ api_op* }
apis = { "apis:" ~ NEWLINE ~ api* ~ NEWLINE* }

comment = _{ "//" ~ (!"\n" ~ ANY)* }

irrelevant = _{ comment | blank_line }

status_codes_single_modifiers = { "retryable" }
status_codes_options = { space+ ~ status_codes_single_modifiers }
status_codes_kwd = { "status_codes:" ~ NEWLINE }
status_code_n = { ASCII_DIGIT* }
status_code_desc = { space+ ~ status_code_n ~ status_codes_options* ~ kwd_delimiter ~ space* ~ string* ~ NEWLINE }
status_codes = { status_codes_kwd ~ status_code_desc* }

common_groups_kwd = { "headers_groups" | "params_groups" | "query_groups" | "status_codes_groups"}
common_groups_item = { space+ ~ ident ~ kwd_delimiter ~ word_list* ~ NEWLINE }
common_groups_def = { common_groups_kwd ~ kwd_delimiter ~ NEWLINE ~ common_groups_item* }

api_file = { SOI ~ spec_header ~ irrelevant* ~ spec_items* ~ irrelevant* ~ status_codes* ~ common_groups_def* ~ irrelevant* ~ apis ~ EOI }